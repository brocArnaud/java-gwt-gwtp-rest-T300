/*
 * Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
 * Generated by Telosys ( http://www.telosys.org/ ) version $generator.version
 */
package ${target.javaPackageFromFolder(${SRC})};

import com.google.inject.Inject;
import com.google.web.bindery.event.shared.EventBus;
import com.gwtplatform.mvp.client.annotations.ProxyStandard;
import com.gwtplatform.mvp.client.presenter.slots.NestedSlot;
import com.gwtplatform.mvp.client.proxy.PlaceManager;
import com.gwtplatform.mvp.client.proxy.Proxy;
import ${ROOT_PKG}.client.application.layout.header.HeaderPresenter.HeaderProxy;
import ${ROOT_PKG}.client.application.layout.header.HeaderPresenter.HeaderView;
import ${ROOT_PKG}.client.event.LoadingEvent;
import ${ROOT_PKG}.client.place.NameTokens;
import ${ROOT_PKG}.client.util.common.BasePresenter;
import ${ROOT_PKG}.client.util.common.SimpleView;


public class HeaderPresenter extends BasePresenter<HeaderView, HeaderProxy> implements LoadingEvent.LoadingHandler {
	public interface HeaderView extends SimpleView<HeaderPresenter> {
		void showSpinner(boolean visible);
	}

	@ProxyStandard
	public interface HeaderProxy extends Proxy<HeaderPresenter> {
	}

	public static final NestedSlot SLOT_CONTENT = new NestedSlot();

	@Inject
	HeaderPresenter(EventBus eventBus, HeaderView view, HeaderProxy proxy, PlaceManager placeManager) {
		super(eventBus, view, proxy, SLOT_CONTENT, placeManager);
		getView().setPresenter(this);
	}

	@Override
	protected void onBind() {
		super.onBind();
		addRegisteredHandler(LoadingEvent.TYPE, this);
	}

	public void onHomeClick() {
		revealPlace(NameTokens.HOME);
	}

	@Override
	public void onLoadingEvent(LoadingEvent event) {
		getView().showSpinner(event.isShow());
	}

#foreach( $entity in $selectedEntities )
#if ($foreach.index <= 8)
#set( $upperCaseEntityName = $fn.toUpperCase($entity.name))
#set( $listRootName = "${upperCaseEntityName}_LIST" )
	public void on${entity.name}Click() {
		revealPlace(NameTokens.$listRootName);
	}
#end
#end
}