/*
 * Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
 * Generated by Telosys ( http://www.telosys.org/ ) version $generator.version
 */
package ${target.javaPackageFromFolder(${SRC})};
$env.setEntityClassNameSuffix("Dto")

import java.io.Serializable;
import javax.validation.constraints.*;

#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

/**
 * Dto for entity "${entity.databaseTable}" <br>
 * @author Telosys Tools Generator
 *
 */
public class $entity.name implements Serializable
{
    private static final long serialVersionUID = 1L;

#foreach( $field in $entity.keyAttributes )
$beanValidation.annotationsForWrapperType(4,$field)
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
    private Integer $field.name ;
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
    private Double $field.name ;
#else
    private $field.wrapperType $field.name ;
#end
#end

#foreach( $field in $entity.nonKeyAttributes )
$beanValidation.annotationsForWrapperType(4,$field)
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
    private Integer $field.name ;
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
    private Double $field.name ;
#else
    private $field.wrapperType $field.name ;
#end
#end

    /**
     * Default constructor
     */
    public ${entity.name}() {
        super();
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR ID OR PRIMARY KEY 
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
#if ( $field.setter )    
    /**
     * Set the "$field.name" field value
     * @param $field.name
     */
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
	public void ${field.setter}( Integer $field.name ) {
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
	public void ${field.setter}( Double $field.name ) {
#else
	public void ${field.setter}( $field.wrapperType $field.name ) {
#end
        this.$field.name = $field.name ;
    }
#end
#if ( $field.getter )    
    /**
     * Get the "$field.name" field value
     * @return the field value
     */
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
	public Integer ${field.getter}() {
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
	public Double ${field.getter}() {
#else
	public $field.wrapperType ${field.getter}() {
#end
        return this.$field.name;
    }
#end
#end

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR OTHER DATA FIELDS 
    //----------------------------------------------------------------------
#foreach( $field in $entity.nonKeyAttributes )
#if ( $field.setter )
    /**
     * Set the "$field.name" field value
     * @param $field.name
     */
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
	public void ${field.setter}( Integer $field.name ) {
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
	public void ${field.setter}( Double $field.name ) {
#else
	public void ${field.setter}( $field.wrapperType $field.name ) {
#end
        this.$field.name = $field.name;
    }
#end
#if ( $field.getter )
    /**
     * Get the "$field.name" field value
     * @return the field value
     */
#if(${field.wrapperType} == 'Short' || ${field.wrapperType} == 'Long')
	public Integer ${field.getter}() {
#elseif(${field.wrapperType} == 'Float' || ${field.wrapperType} == 'BigDecimal')
	public Double ${field.getter}() {
#else
	public $field.wrapperType ${field.getter}() {
#end
        return this.$field.name;
    }
#end
#end

    @Override
$java.toStringMethod($entity, 4)
}